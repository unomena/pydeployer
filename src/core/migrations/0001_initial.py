# Generated by Django 5.1.2 on 2025-09-02 15:37

import core.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('qa', 'QA'), ('stage', 'Staging'), ('prod', 'Production')], max_length=20)),
                ('config', models.JSONField(default=dict, help_text='Parsed deploy-{env}.yaml content')),
                ('secrets', core.models.EncryptedJSONField(default=dict, help_text='Environment-specific secrets')),
                ('active', models.BooleanField(default=True)),
                ('domain', models.CharField(blank=True, help_text='Domain for this environment', max_length=255)),
                ('ssl_enabled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'deployer_environments',
                'ordering': ['project', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('repository_url', models.URLField(help_text='Git repository URL')),
                ('deploy_key', models.TextField(blank=True, help_text='SSH key for private repositories')),
                ('default_branch', models.CharField(default='main', max_length=100)),
                ('port_start', models.IntegerField(help_text='Starting port for service allocation')),
                ('webhook_secret', models.CharField(blank=True, max_length=255)),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'deployer_projects',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Deployment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=50)),
                ('commit_sha', models.CharField(max_length=40)),
                ('commit_message', models.TextField(blank=True)),
                ('commit_author', models.CharField(blank=True, max_length=100)),
                ('commit_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('cloning', 'Cloning Repository'), ('building', 'Building'), ('deploying', 'Deploying'), ('testing', 'Running Tests'), ('active', 'Active'), ('failed', 'Failed'), ('rolled_back', 'Rolled Back')], db_index=True, default='pending', max_length=20)),
                ('deployment_path', models.CharField(max_length=255)),
                ('deployed_by', models.CharField(max_length=100)),
                ('deployed_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deployments', to='core.environment')),
                ('rollback_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rollbacks', to='core.deployment')),
            ],
            options={
                'db_table': 'deployer_deployments',
                'ordering': ['-deployed_at'],
            },
        ),
        migrations.AddField(
            model_name='environment',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='environments', to='core.project'),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('service_type', models.CharField(choices=[('django', 'Django Web'), ('celery', 'Celery Worker'), ('celery-beat', 'Celery Beat'), ('custom', 'Custom Service')], max_length=20)),
                ('command', models.TextField()),
                ('port', models.IntegerField(blank=True, db_index=True, null=True)),
                ('status', models.CharField(choices=[('running', 'Running'), ('stopped', 'Stopped'), ('failed', 'Failed'), ('restarting', 'Restarting'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('pid', models.IntegerField(blank=True, null=True)),
                ('memory_usage', models.BigIntegerField(default=0, help_text='Memory usage in bytes')),
                ('cpu_usage', models.FloatField(default=0.0, help_text='CPU usage percentage')),
                ('last_health_check', models.DateTimeField(blank=True, null=True)),
                ('health_check_endpoint', models.CharField(blank=True, max_length=255)),
                ('supervisor_name', models.CharField(max_length=100, unique=True)),
                ('enabled', models.BooleanField(default=True)),
                ('max_memory', models.IntegerField(default=2048, help_text='Max memory in MB')),
                ('max_cpu', models.FloatField(default=1.0, help_text='Max CPU cores')),
                ('restart_count', models.IntegerField(default=0)),
                ('last_restart', models.DateTimeField(blank=True, null=True)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='core.environment')),
            ],
            options={
                'db_table': 'deployer_services',
                'ordering': ['environment', 'name'],
            },
        ),
        migrations.CreateModel(
            name='HealthCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_healthy', models.BooleanField()),
                ('response_time', models.FloatField(blank=True, help_text='Response time in seconds', null=True)),
                ('error_message', models.TextField(blank=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_checks', to='core.service')),
            ],
            options={
                'db_table': 'deployer_health_checks',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='WebhookEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(max_length=50)),
                ('payload', models.JSONField()),
                ('headers', models.JSONField()),
                ('processed', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('deployment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.deployment')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='webhook_events', to='core.project')),
            ],
            options={
                'db_table': 'deployer_webhook_events',
                'ordering': ['-received_at'],
            },
        ),
        migrations.CreateModel(
            name='DeploymentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], default='INFO', max_length=20)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, null=True)),
                ('deployment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='core.deployment')),
            ],
            options={
                'db_table': 'deployer_logs',
                'ordering': ['timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='deployment',
            index=models.Index(fields=['-deployed_at'], name='deployer_de_deploye_326135_idx'),
        ),
        migrations.AddIndex(
            model_name='deployment',
            index=models.Index(fields=['environment', 'status'], name='deployer_de_environ_bd96ce_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='environment',
            unique_together={('project', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='service',
            unique_together={('environment', 'name')},
        ),
        migrations.AddIndex(
            model_name='deploymentlog',
            index=models.Index(fields=['deployment', 'timestamp'], name='deployer_lo_deploym_07e74e_idx'),
        ),
        migrations.AddIndex(
            model_name='healthcheck',
            index=models.Index(fields=['service', '-timestamp'], name='deployer_he_service_3fae36_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookevent',
            index=models.Index(fields=['-received_at'], name='deployer_we_receive_f22ab6_idx'),
        ),
    ]